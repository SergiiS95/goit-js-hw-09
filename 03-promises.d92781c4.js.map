{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SACpBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAgCxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACeC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAErBG,EAAO,CAAEJ,WAAUC,S,GAEnBA,E,IAvCTL,EAAKY,iBAAiB,UAEtB,SAAsBC,GAEpBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACbC,EAAQC,OAAOH,EAAKI,SAASd,MAAMe,OACjCC,EAAOH,OAAOH,EAAKI,SAASE,KAAKD,OACnCE,EAASJ,OAAOH,EAAKI,SAASG,OAAOF,OACrCG,EAAW,EAEf,GAAID,GAAU,GAAKL,EAAQ,GAAKI,EAAO,EAErC,YADAG,EAAA1B,GAAS2B,OAAOC,QAAS,qCAI3B,IAAK,IAAIC,EAAIJ,EAAUI,GAAKL,EAAQK,IACpCxB,EAAcoB,EAAUN,GACrBW,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBmB,EAAA1B,GAAS2B,OAAOK,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAH,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBmB,EAAA1B,GAAS2B,OAAOC,QAAQ,sBAAqCK,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAErEY,GAASI,EACTE,GAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form')\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onSubmitForm)\n\nfunction onSubmitForm(evt) {\n\n  evt.preventDefault();\n  const form = evt.currentTarget;\n  let delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n  let position = 1;\n\n  if (amount <= 0 || delay < 0 || step < 0) {\n    Notiflix.Notify.failure(` Please input correct values (>0)`);\n    return\n  }\n\n  for (let i = position; i <= amount; i++) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n    position +=1\n}\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n       if (shouldResolve) {\n          resolve({ position, delay });\n       } else {\n         reject({ position, delay });\n       }\n      }, delay);\n  });"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","form1","currentTarget","delay1","Number","elements","value","step","amount","position1","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.d92781c4.js.map"}