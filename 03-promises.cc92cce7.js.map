{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SACpBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAgCxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACeC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAErBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE3BA,EAAM,G,CAvCfL,EAAKY,iBAAiB,UAEtB,SAAsBC,GAEpBA,EAAIC,iBACJ,MAAMC,EAAOF,EAAIG,cACjB,IAAIC,EAAQC,OAAOH,EAAKI,SAASd,MAAMe,OACvC,MAAMC,EAAOH,OAAOH,EAAKI,SAASE,KAAKD,OACvC,IAAIE,EAASJ,OAAOH,EAAKI,SAASG,OAAOF,OACrCG,EAAW,EAEf,GAAID,GAAU,GAAKL,EAAQ,GAAKI,EAAO,EAErC,YADAG,EAAA1B,GAAS2B,OAAOC,QAAQ,qCAI1B,IAAK,IAAIC,EAAIJ,EAAUI,GAAKL,EAAQK,IACpCxB,EAAcoB,EAAUN,GACrBW,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA1B,GAAS2B,OAAOI,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA1B,GAAS2B,OAAOC,QAAQ,sBAAoBtB,QAAeC,MAAU,IAEvEY,GAASI,EACTE,GAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form')\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onSubmitForm)\n\nfunction onSubmitForm(evt) {\n\n  evt.preventDefault();\n  const form = evt.currentTarget;\n  let delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n  let position = 1;\n\n  if (amount <= 0 || delay < 0 || step < 0) {\n    Notiflix.Notify.failure(` Please input correct values (>0)`);\n    return\n  }\n\n  for (let i = position; i <= amount; i++) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n    position +=1\n}\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n       if (shouldResolve) {\n          resolve({ position, delay });\n       } else {\n         reject({ position, delay });\n       }\n      }, delay);\n  });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","form1","currentTarget","delay1","Number","elements","value","step","amount","position1","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.cc92cce7.js.map"}